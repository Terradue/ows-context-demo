<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.terradue.ciop.app</groupId>
  <artifactId>ows-context-demo</artifactId>
  <packaging>pom</packaging>
  <name>OGC OWS Context demo</name>
  <description>OGC OWS Context demo</description>
  <version>0.21</version>
  <scm>
    <connection>scm:git:git@github.com:Terradue/ows-context-demo.git</connection>
    <developerConnection>scm:git:git@github.com:Terradue/ows-context-demo.git</developerConnection>
    <url>https://github.com/Terradue/ows-context-demo.git</url>
    <tag>HEAD</tag>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.deploy.skip>true</maven.deploy.skip>
    <github.global.server>github</github.global.server>
    <github.site.repositoryName>ows-context-demo</github.site.repositoryName>
    <github.site.repositoryOwner>Terradue</github.site.repositoryOwner>
  </properties>
  <repositories>
    <repository>
      <id>repository.terradue.com</id>
      <name>repository.terradue.com-releases</name>
      <url>http://repository.terradue.com/artifactory/libs-release-public</url>
      <releases>
        <enabled>true</enabled>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <snapshots/>
      <id>repository.terradue.com</id>
      <name>repository.terradue.com-releases</name>
      <url>http://repository.terradue.com/artifactory/libs-release-public</url>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-demo-src</id>
            <phase>pre-site</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/demo</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/demo</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
		</executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-gitexe</artifactId>
            <version>1.9</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/package</outputDirectory>
              <descriptors>
                <descriptor>${basedir}/src/assembly/package.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.jutzig</groupId>
        <artifactId>github-release-plugin</artifactId>
        <version>1.0.3</version>
        <executions>
          <execution>
            <id>github-upload</id>
            <phase>deploy</phase>
            <goals>
              <goal>release</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
              <releaseName>v${project.version}</releaseName>
              <tag>v${project.version}</tag>
              <artifact>${project.build.directory}/package/ows-context-demo-${parsedVersion.majorVersion}.${parsedVersion.minorVersion}-package.tar.gz</artifact>
              <overwriteArtifact>true</overwriteArtifact>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>0.8</version>
        <configuration>
          <message>Creating site for ${project.version}</message>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>site-deploy</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/demo</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>0.9</version>
        <configuration>
          <message>Creating site for ${project.version}</message>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>site-deploy</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/demo</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <skip>true</skip>
          <skipDeploy>true</skipDeploy>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
